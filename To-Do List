#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Define Task structure
struct Task {
    string description;
    bool isCompleted;

    Task(string desc) {
        description = desc;
        isCompleted = false;
    }
};

// Function to add a task
void addTask(vector<Task> &tasks) {
    string desc;
    cout << "Enter task description: ";
    cin.ignore(); // Clear input buffer
    getline(cin, desc);
    tasks.push_back(Task(desc));
    cout << "✅ Task added!\n";
}

// Function to view all tasks
void viewTasks(const vector<Task> &tasks) {
    if (tasks.empty()) {
        cout << "📭 No tasks in the list.\n";
        return;
    }

    cout << "\n📝 Your To-Do List:\n";
    for (int i = 0; i < tasks.size(); ++i) {
        cout << i + 1 << ". [" << (tasks[i].isCompleted ? "✔" : " ") << "] " << tasks[i].description << "\n";
    }
}

// Function to mark a task as completed
void markCompleted(vector<Task> &tasks) {
    int index;
    cout << "Enter task number to mark as completed: ";
    cin >> index;

    if (index >= 1 && index <= tasks.size()) {
        tasks[index - 1].isCompleted = true;
        cout << "✅ Task marked as completed.\n";
    } else {
        cout << "❌ Invalid task number.\n";
    }
}

// Function to remove a task
void removeTask(vector<Task> &tasks) {
    int index;
    cout << "Enter task number to remove: ";
    cin >> index;

    if (index >= 1 && index <= tasks.size()) {
        tasks.erase(tasks.begin() + index - 1);
        cout << "🗑️ Task removed.\n";
    } else {
        cout << "❌ Invalid task number.\n";
    }
}

// Show main menu
void showMenu() {
    cout << "\n===== TO-DO LIST MANAGER =====\n";
    cout << "1. Add Task\n";
    cout << "2. View Tasks\n";
    cout << "3. Mark Task as Completed\n";
    cout << "4. Remove Task\n";
    cout << "5. Exit\n";
    cout << "Select an option: ";
}

// Main function
int main() {
    vector<Task> tasks;
    int choice;

    while (true) {
        showMenu();
        cin >> choice;

        switch (choice) {
            case 1: addTask(tasks); break;
            case 2: viewTasks(tasks); break;
            case 3: markCompleted(tasks); break;
            case 4: removeTask(tasks); break;
            case 5: cout << "👋 Exiting... Thank you!\n"; return 0;
            default: cout << "⚠️ Invalid choice. Try again.\n";
        }
    }

    return 0;
}
